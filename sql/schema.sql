\i ./drop.sql

-- ESPORTE COM NOME E DESCRICAO
CREATE TABLE ESPORTE (
    NOME VARCHAR(50),
    DESCRICAO VARCHAR(255),
    CONSTRAINT PK_ESPORTE PRIMARY KEY (NOME),
    CONSTRAINT CK_NOME CHECK (NOME ~ '^[A-Za-z0-9_-]{3,50}$')
);
-- CENTRO DE TREINAMENTO COM CNPJ, NOME, RUA, NUMERO, CEP, CIDADE, ESTADO, BAIRRO
CREATE TABLE CENTRO_TREINAMENTO (
    CNPJ CHAR(18),
    NOME VARCHAR(50),
    RUA VARCHAR(50),
    NUMERO INTEGER, /* TODO: LEMBRAR DE ADICIONAR NO MER*/
    CEP CHAR(9),
    CIDADE VARCHAR(50),
    ESTADO CHAR(2),
    BAIRRO VARCHAR(50),
    CONSTRAINT PK_CENTRO_TREINAMENTO PRIMARY KEY (CNPJ)
);
-- ADMINISTRADOR COM CPF, NOME E DATA DE NASCIMENTO
CREATE TABLE ADMINISTRADOR (
    CPF CHAR(14) NOT NULL,
    NOME VARCHAR(50),
    DATA_NASCIMENTO DATE,
    CONSTRAINT PK_ADMINISTRADOR PRIMARY KEY (CPF),
    CONSTRAINT CK_CPF CHECK (CPF ~ '^\d{3}\.\d{3}\.\d{3}-\d{2}$'),
    CONSTRAINT CK_NOME CHECK (NOME ~ '^[A-Za-z0-9 ]{3,50}$')
);
-- TIME COM ID, NOME, ESPORTE DESEMPENHO E ADMINISTRADOR
CREATE TABLE TIME (
    ID SERIAL,
    NOME VARCHAR(50) NOT NULL,
    ESPORTE_NOME VARCHAR(50) NOT NULL,
    DESEMPENHO DECIMAL(4,2),
    ADMINISTRADOR_CPF CHAR(14) NOT NULL,
    CONSTRAINT PK_TIME PRIMARY KEY (ID),
    CONSTRAINT FK_TIME_ADMINISTRADOR FOREIGN KEY (ADMINISTRADOR_CPF) REFERENCES ADMINISTRADOR(CPF) ON DELETE CASCADE,
    CONSTRAINT FK_TIME_ESPORTE FOREIGN KEY (ESPORTE_NOME) REFERENCES ESPORTE(NOME) ON DELETE CASCADE,
    CONSTRAINT CK_NOME CHECK (NOME ~ '^[A-Za-z0-9_-]{3,50}$'),
    CONSTRAINT CK_DESEMPENHO CHECK (DESEMPENHO >= 0 AND DESEMPENHO <= 10),
    CONSTRAINT UN_ADMINISTRADOR UNIQUE (ADMINISTRADOR_CPF),
    CONSTRAINT UN_ESPORTE_NOME UNIQUE (ESPORTE_NOME, NOME)
);

-- CAMPEONATO COM ID, ESPORTE, ANO, NOME, CENTRO DE TREINAMENTO E VENCEDOR
CREATE TABLE CAMPEONATO (
    ID SERIAL,
    ESPORTE_NOME VARCHAR(50) NOT NULL,
    ANO INTEGER NOT NULL,
    NOME VARCHAR(50) NOT NULL,
    CENTRO_TREINAMENTO_CNPJ CHAR(18) NOT NULL,
    VENCEDOR INTEGER,
    CONSTRAINT PK_CAMPEONATO PRIMARY KEY (ID),
    CONSTRAINT FK_CAMPEONATO_ESPORTE FOREIGN KEY (ESPORTE_NOME) REFERENCES ESPORTE(NOME) ON DELETE CASCADE,
    CONSTRAINT FK_CAMPEONATO_CENTRO_TREINAMENTO FOREIGN KEY (CENTRO_TREINAMENTO_CNPJ) REFERENCES CENTRO_TREINAMENTO(CNPJ) ON DELETE CASCADE,
    CONSTRAINT FK_CAMPEONATO_VENCEDOR FOREIGN KEY (VENCEDOR) REFERENCES TIME(ID) ON DELETE CASCADE,
    CONSTRAINT CK_NOME CHECK (NOME ~ '^[A-Za-z0-9 _-]{3,50}$'),
    CONSTRAINT CK_ANO CHECK (ANO >= 1900 AND ANO <= 2100)
);

-- TIMES PARTICIPANTES COM TIME E CAMPEONATO
CREATE TABLE TIMES_PARTICIPANTES (
    TIME_ID INTEGER NOT NULL,
    CAMPEONATO_ID INTEGER NOT NULL,
    CONSTRAINT PK_TIMES_PARTICIPANTES PRIMARY KEY (TIME_ID, CAMPEONATO_ID),
    CONSTRAINT FK_TIMES_PARTICIPANTES_TIME FOREIGN KEY (TIME_ID) REFERENCES TIME(ID) ON DELETE CASCADE,
    CONSTRAINT FK_TIMES_PARTICIPANTES_CAMPEONATO FOREIGN KEY (CAMPEONATO_ID) REFERENCES CAMPEONATO(ID) ON DELETE CASCADE
);

/*TODO: TESTAR SE PRECISA COLOCAR RESTRICAO DE TIMES UNICOS */
-- ARBITRO COM CPF, NOME E DATA DE NASCIMENTO FEDERECAO E COD_REGISTRO
CREATE TABLE ARBITRO (
    CPF CHAR(14),
    NOME VARCHAR(50),
    DATA_NASCIMENTO DATE,
    FEDERACAO VARCHAR(50),
    COD_REGISTRO CHAR(10),
    CONSTRAINT PK_ARBITRO PRIMARY KEY (CPF),
    CONSTRAINT CK_CPF CHECK (CPF ~ '^\d{3}.\d{3}.\d{3}-\d{2}$'),
    CONSTRAINT CK_NOME CHECK (NOME ~ '^[A-Za-z0-9 ]{3,50}$'),
    CONSTRAINT UN_FEDERACAO_COD_REGISTRO UNIQUE (FEDERACAO, COD_REGISTRO)
);


--ESPECIALIDADE ARBITROS COM ESPORTE, ARBITRO
CREATE TABLE ESPECIALIDADE_ARBITROS (
    ESPORTE_NOME VARCHAR(50) NOT NULL,
    ARBITRO_CPF CHAR(14) NOT NULL,
    CONSTRAINT PK_ESPECIALIDADE_ARBITROS PRIMARY KEY (ESPORTE_NOME, ARBITRO_CPF),
    CONSTRAINT FK_ESPECIALIDADE_ARBITROS_ARBITRO FOREIGN KEY (ARBITRO_CPF) REFERENCES ARBITRO(CPF) ON DELETE CASCADE,
    CONSTRAINT FK_ESPECIALIDADE_ARBITROS_ESPORTE FOREIGN KEY (ESPORTE_NOME) REFERENCES ESPORTE(NOME) ON DELETE CASCADE
);
-- PARTIDA COM CAMPEONATO DATA/HORA LOCAL ARBITRO1, ARBITRO2, ARBITRO3, VENCEDOR
CREATE TABLE PARTIDA (
    ID SERIAL,
    CAMPEONATO_ID INTEGER NOT NULL,
    DATA_HORA TIMESTAMP NOT NULL,
    LOCAL VARCHAR(50) NOT NULL,
    ARBITRO1_CPF CHAR(14),
    ARBITRO2_CPF CHAR(14),
    ARBITRO3_CPF CHAR(14),
    VENCEDOR INTEGER,
    CONSTRAINT PK_PARTIDA PRIMARY KEY (ID),
    CONSTRAINT UN_PARTIDA UNIQUE (CAMPEONATO_ID, DATA_HORA, LOCAL),
    CONSTRAINT FK_PARTIDA_CAMPEONATO FOREIGN KEY (CAMPEONATO_ID) REFERENCES CAMPEONATO(ID) ON DELETE CASCADE,
    CONSTRAINT FK_PARTIDA_ARBITRO1 FOREIGN KEY (ARBITRO1_CPF) REFERENCES ARBITRO(CPF) ON DELETE SET NULL,
    CONSTRAINT FK_PARTIDA_ARBITRO2 FOREIGN KEY (ARBITRO2_CPF) REFERENCES ARBITRO(CPF) ON DELETE SET NULL,
    CONSTRAINT FK_PARTIDA_ARBITRO3 FOREIGN KEY (ARBITRO3_CPF) REFERENCES ARBITRO(CPF) ON DELETE SET NULL,
    CONSTRAINT FK_PARTIDA_VENCEDOR FOREIGN KEY (VENCEDOR) REFERENCES TIME(ID) ON DELETE CASCADE,
    CONSTRAINT CK_LOCAL CHECK (LOCAL ~ '^[A-Za-z0-9 _-]{3,50}$')
);
-- PARITDA_TIMES COM TIME, PARTIDA E DESEMPENHO
CREATE TABLE PARTIDA_TIMES (
    TIME_ID INTEGER,
    PARTIDA_ID INTEGER,
    DESEMPENHO DECIMAL(4,2),
    CONSTRAINT PK_PARTIDA_TIMES PRIMARY KEY (TIME_ID, PARTIDA_ID),
    CONSTRAINT FK_PARTIDA_TIMES_TIME FOREIGN KEY (TIME_ID) REFERENCES TIME(ID) ON DELETE CASCADE,
    CONSTRAINT FK_PARTIDA_TIMES_PARTIDA FOREIGN KEY (PARTIDA_ID) REFERENCES PARTIDA(ID) ON DELETE CASCADE,
    CONSTRAINT CK_DESEMPENHO CHECK (DESEMPENHO >= 0 AND DESEMPENHO <= 10)
);
/*TODO: Adicionar id sintetico para partida*/

-- ATLETA COM CPF, NOME, DATA DE NASCIMENTO
CREATE TABLE ATLETA (
    CPF CHAR(14),
    NOME VARCHAR(50),
    DATA_NASCIMENTO DATE,
    CONSTRAINT PK_ATLETA PRIMARY KEY (CPF),
    CONSTRAINT CK_CPF CHECK (CPF ~ '^\d{3}.\d{3}.\d{3}-\d{2}$'),
    CONSTRAINT CK_NOME CHECK (NOME ~ '^[A-Za-z0-9 ]{3,50}$')
);
-- ATLETA TIME COM ATLETA, TIME
CREATE TABLE ATLETA_TIME (
    ATLETA_CPF CHAR(14),
    TIME_ID INTEGER,
    CONSTRAINT PK_ATLETA_TIME PRIMARY KEY (ATLETA_CPF, TIME_ID),
    CONSTRAINT FK_ATLETA_TIME_ATLETA FOREIGN KEY (ATLETA_CPF) REFERENCES ATLETA(CPF) ON DELETE CASCADE,
    CONSTRAINT FK_ATLETA_TIME_TIME FOREIGN KEY (TIME_ID) REFERENCES TIME(ID) ON DELETE CASCADE
);
-- TECNICO COM CPF, NOME, DATA DE NASCIMENTO
CREATE TABLE TECNICO (
    CPF CHAR(14),
    NOME VARCHAR(50),
    DATA_NASCIMENTO DATE,
    CONSTRAINT PK_TECNICO PRIMARY KEY (CPF),
    CONSTRAINT CK_CPF CHECK (CPF ~ '^\d{3}.\d{3}.\d{3}-\d{2}$'),
    CONSTRAINT CK_NOME CHECK (NOME ~ '^[A-Za-z0-9 ]{3,50}$')
);
-- CONTRATACAO COM TECNICO, CENTRO DE TREINAMENTO E DATA INICIO E FIM
CREATE TABLE CONTRATACAO (
    TECNICO_CPF CHAR(14),
    CENTRO_TREINAMENTO_CNPJ CHAR(18),
    DATA_INICIO DATE,
    DATA_FIM DATE,
    CONSTRAINT PK_CONTRATACAO PRIMARY KEY (TECNICO_CPF, CENTRO_TREINAMENTO_CNPJ, DATA_INICIO),
    CONSTRAINT FK_CONTRATACAO_TECNICO FOREIGN KEY (TECNICO_CPF) REFERENCES TECNICO(CPF) ON DELETE CASCADE,
    CONSTRAINT FK_CONTRATACAO_CENTRO_TREINAMENTO FOREIGN KEY (CENTRO_TREINAMENTO_CNPJ) REFERENCES CENTRO_TREINAMENTO(CNPJ) ON DELETE CASCADE,
    CONSTRAINT CK_DATA CHECK (DATA_INICIO <= DATA_FIM)
);
-- PATROCINADOR COM CNPJ E NOME
CREATE TABLE PATROCINADOR (
    CNPJ CHAR(18),
    NOME VARCHAR(50),
    CONSTRAINT PK_PATROCINADOR PRIMARY KEY (CNPJ),
    CONSTRAINT CK_CNPJ CHECK (CNPJ ~ '^\d{2}\.\d{3}\.\d{3}\/\d{4}-\d{2}$'),
    CONSTRAINT CK_NOME CHECK (NOME ~ '^[A-Za-z0-9 ]{3,50}$')
);
-- PATROCINIO COM PATROCINADOR, TIME, DATA INICIO E FIM
CREATE TABLE PATROCINIO (
    PATROCINADOR_CNPJ CHAR(18),
    TIME_ID INTEGER,
    DATA_INICIO DATE,
    DATA_FIM DATE,
    CONSTRAINT PK_PATROCINIO PRIMARY KEY (PATROCINADOR_CNPJ, TIME_ID, DATA_INICIO),
    CONSTRAINT FK_PATROCINIO_PATROCINADOR FOREIGN KEY (PATROCINADOR_CNPJ) REFERENCES PATROCINADOR(CNPJ) ON DELETE CASCADE,
    CONSTRAINT FK_PATROCINIO_TIME FOREIGN KEY (TIME_ID) REFERENCES TIME(ID) ON DELETE CASCADE,
    CONSTRAINT CK_DATA CHECK (DATA_INICIO <= DATA_FIM)
);
-- FACULDADE COM CNPJ E NOME
CREATE TABLE FACULDADE (
    CNPJ CHAR(18),
    NOME VARCHAR(50),
    CONSTRAINT PK_FACULDADE PRIMARY KEY (CNPJ),
    CONSTRAINT CK_CNPJ CHECK (CNPJ ~ '^\d{2}\.\d{3}\.\d{3}\/\d{4}-\d{2}$'),
    CONSTRAINT CK_NOME CHECK (NOME ~ '^[A-Za-z0-9 ]{3,50}$')
);
-- BOLSA COM FACULDADE, ATLETA, DATA INICIO E FIM
CREATE TABLE BOLSA (
    FACULDADE_CNPJ CHAR(18),
    ATLETA_CPF CHAR(14),
    DATA_INICIO DATE,
    DATA_FIM DATE,
    CONSTRAINT PK_BOLSA PRIMARY KEY (FACULDADE_CNPJ, ATLETA_CPF, DATA_INICIO),
    CONSTRAINT FK_BOLSA_FACULDADE FOREIGN KEY (FACULDADE_CNPJ) REFERENCES FACULDADE(CNPJ) ON DELETE CASCADE,
    CONSTRAINT FK_BOLSA_ATLETA FOREIGN KEY (ATLETA_CPF) REFERENCES ATLETA(CPF) ON DELETE CASCADE,
    CONSTRAINT CK_DATA CHECK (DATA_INICIO <= DATA_FIM)
);


-- TREINAMENTO COM TIME TECNICO, CENTRO DE TREINAMENTO, DATA/HORA
CREATE TABLE TREINAMENTO (
    TIME_ID INTEGER,
    TECNICO_CPF CHAR(14),
    CENTRO_TREINAMENTO_CNPJ CHAR(18),
    DATA_HORA TIMESTAMP,
    CONSTRAINT PK_TREINAMENTO PRIMARY KEY (TIME_ID, TECNICO_CPF, CENTRO_TREINAMENTO_CNPJ, DATA_HORA),
    CONSTRAINT FK_TREINAMENTO_TIME FOREIGN KEY (TIME_ID) REFERENCES TIME(ID) ON DELETE CASCADE,
    CONSTRAINT FK_TREINAMENTO_TECNICO FOREIGN KEY (TECNICO_CPF) REFERENCES TECNICO(CPF) ON DELETE CASCADE,
    CONSTRAINT FK_TREINAMENTO_CENTRO_TREINAMENTO FOREIGN KEY (CENTRO_TREINAMENTO_CNPJ) REFERENCES CENTRO_TREINAMENTO(CNPJ) ON DELETE CASCADE
);